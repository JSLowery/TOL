<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, May 21, 2015, 8:46 AM -->
<!-- MuClient version 4.79 -->

<!-- Plugin "TOL" generated by Plugin Wizard -->
<muclient>
<plugin
   name="TOL"
   author="Sonet"
   id="8065ca1ba19b529aee53ee44"
   language="Lua"
   save_state="y"
   date_written="2015-05-21 08:44:48"
   requires="4.79"
   version="1.171" >

<description trim="n">
<![CDATA[
Version: 1.3
-----------------------------------------------
-- Campaign specific commands
-----------------------------------------------
tcp | tcp <index>
      -- Without argument it goes to the first mob in the table, with it goes to that number
      -- Note this will also decide if it needs to be hunted or not all by its self
tcpo | tcpo <index>
      -- Withough argument goest to the first mob in the alternate table
tqs
      -- Quick Scan
km
      -- Sends the kill command for the last mob queued up by aknx
pt
      -- Prints the table of mobs and room numbers
pto
      -- Prints the other list of possible room cps
wm | wm <name>
      -- Quick where for a mob name or the last mob used with aknx
cpn <index> | <mob name>
      -- Hunt trick on the given index or mob name
kcpn
      -- turns off hunt script

-----------------------------------------------
-- Quest specific commands
-----------------------------------------------
tq | tq <index> - not case sensitive
      -- Without argument it goes to the most probable quest room, with it goes to that room
nq - not case sensitive
      -- Runs to the next quest room
rq | rq all
      -- Without argument it shows most likely rooms, with it it shows all possible rooms

-----------------------------------------------
-- Other commands
-----------------------------------------------
xrt1 <area>
      -- runs to areas
tkey "<mob>" "<keywords>"
      -- Stores special keywords for a mob.
cp | gq end
      -- clears the miniwindow
tlookup name <name> level <number> room <roomname> area <areaname>
      -- This will look up mobs in the db..
      -- Any order and as little as one of these can be used
      -- Experimental currently
ah <name>
      -- Starts the auto hunt(hunt and move) on the name given
ahoff
      -- Kills the autohunt program.
Note:
  Adding a "Tstart" as in "mapper addnote Tstart" will tell TOL that this room is the begining of the area for this area
]]>
</description>
</plugin>

<!--  Get our standard constants -->
<include name="constants.lua"/>
  <timers>
    <timer
      name="execute_in_area_timer"
      script="execute_in_area_tick"
      enabled="n"
      second="0.25" >
  </timer>
    <timer
      name="garbage_collection"
      script="collectgarbagenow"
      enabled="y"
      minute="5" >
    </timer>
  </timers>

<!--  Aliases  -->
<aliases>
  <alias
   enabled="y"
   match="^(TOL|tol) debug on$"
   script="Toggle_Debug"
   regexp="y"
   sequence='100' >
  </alias>

  <alias
   enabled="y"
   match="^(TOL|tol) debug off$"
   script="Toggle_Debug"
   regexp="y"
   sequence='100' >
  </alias>

  <alias
   match="^printVars$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="printVars"
   regexp="y" >
  </alias>

  <alias
   match="^[t|T][Q|q]$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="qGoto"
   regexp="y" >
  </alias>

  <alias
     match="^[t|T][q|Q] (\d*)$"
     enabled="y"
     send_to="12"
     sequence="100"
     script="qGotoIndex"
     regexp="y" >
  </alias>

  <alias
    match="^[n|N][q|Q]$"
    enabled="y"
    send_to="12"
    sequence="100"
    script="qNext"
    regexp="y" >
  </alias>

  <alias
    match="^[r|R][q|Q]$"
    enabled="y"
    send_to="12"
    sequence="100"
    script="qRooms"
    regexp="y" >
  </alias>

  <alias
    match="^[r|R][q|Q] all$"
    enabled="y"
    send_to="12"
    sequence="100"
    script="qRoomsAll"
    regexp="y" >
  </alias>

  <alias
    enabled="y"
    match="^qTest$"
    script="qTest"
    regexp="y"
    sequence='100'>
  </alias>

  <alias match="^(TOL|tol) help$"
    enabled="y"
    sequence="100"
    send_to="12"
    regexp="y"
    keep_evaluating="y" >
      <send>
        Note(getmemoryusage())
        ColourNote("MediumSeaGreen", "", GetPluginInfo (GetPluginID (), 3))
      </send>
  </alias>

  <alias
   match="^wm (.*)$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="whereMob"
   regexp="y" >
  </alias>

  <alias
   match="^wm$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="whereMob"
   regexp="y" >
  </alias>

  <alias
   match="^km$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="killMob"
   regexp="y">
  </alias>

  <alias
   name="cp_check"
   script="cp_check"
   match="^(cp|campaign) (c|ch|che|chec|check)$"
   enabled="y"
   regexp="y"
   sequence="100"
   send_to='12' >
    <send>
  
    </send>
  </alias>

  <alias
   name="gq_check"
   script="gq_check"
   match="^gq (c|ch|che|chec|check)$"
   enabled="y"
   regexp="y"
   sequence="100"
   send_to="12" >
      <send> 
        EnableTrigger('camp_item_start', 1)
      </send>
  </alias>

  <alias
   match="^tcp$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="gotoNextMob"
   regexp="y" >
  </alias>

  <alias
   match='^tkey \"(.*?)\" \"(.*?)\"$'
   enabled="y"
   send_to="12"
   sequence="100"
   script="add_Keywords"
   regexp="y" >
  </alias>

  <alias
   match="^tcpo (.*)$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="tcpohandler"
   regexp="y" >
  </alias>

  <alias
   match="^tcpo$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="tcpohandler"
   regexp="y" >
  </alias>

  <alias
   match="^tcp (\d*)$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="gotoIndexMob"
   regexp="y" >
  </alias>

  <alias match="^xru?n?to?1 (.+)$"
    enabled="y"
    sequence="100"
    script="xrun_to1"
    regexp="y" >
  </alias>

  <alias 
    match="^xma?p?p?e?r?1 move (?<roomid>[0-9]+) ?(?<speed>run|walk)?$"
    enabled="y"
    sequence="95"
    script="move_trigger"
    regexp="y" >
  </alias>

  <alias
   match="^pt$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="printTable"
   regexp="y" >
   </alias>

   <alias
   match="^pto$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="printTable1"
   regexp="y" >
  </alias>

  <alias
   match="^(cp|campaign|gq|globalquest) end$"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
   script="cpgq_quit" >
  </alias>

  <!-- the group that controlls the hunting aspects -->
  <alias
   match="^cpn (.*?)$"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
   script="cpn_script" >
  </alias>

  <alias
   match="^cpn$"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
   script="cpn_script" >
  </alias>

  <alias
   match="^kcpn$"
   enabled="y"
   send_to="12"
   sequence="100"
   regexp="y"
   script="hunt_off" >
  </alias>

   <alias
   match="^tqs$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="quickScan"
   regexp="y" >
  </alias>

  <alias
   match="^tlookup (.*)$"
   enabled="y"
   send_to="12"
   sequence="100"
   script="lookup"
   regexp="y" >
  </alias>

  <!-- auto hunt aliases -->
  <alias
   match="^ah (.*?)$"
   enabled="y"
   group="auto_hunt"
   script="auto_hunt_start"
   regexp="y"
   send_to="12"
   sequence="100" >
  </alias>
  <alias
   match="ahoff"
   enabled="y"
   group="auto_hunt"
   sequence="100"
   script="auto_hunt_stop" >
  </alias>
</aliases>

<triggers>
   <trigger
   enabled="n"
   match="^You still have to kill (?&lt;num&gt;[\d]*)?\s?\* (?&lt;name&gt;.*?) \((?&lt;location&gt;.*?)(?&lt;dead&gt; - Dead|)\)(|\.)$"
   name="campaign_item"
   script="campaign_item"
   sequence="100"
   regexp="y"
   group="campaigncheck"
   omit_from_output="n" >
  </trigger>

  <trigger
  enabled="n"
  match="^Note\: One or more target names in this campaign|gquest might be slightly scrambled\.$"
  name="camp_item_start"
  script="camp_item_start"
  sequence='100'
  regexp="y"
  omit_from_output="n" >
  </trigger>

  <trigger
   name="reset_cp_win"
   custom_colour="7"
   match="^You are not currently on a campaign.$"
   script="reset_cp_win"
   enabled="y"
   send_to="12"
   regexp="y"
   sequence="100" >
   </trigger>

  <trigger
   name="reset_cp_flag"
   custom_colour="7"
   match="CONGRATULATIONS! You have completed your campaign."
   script="reset_cp_flag"
   enabled="y"
   send_to="12"
   sequence="100" >
   </trigger>

  <trigger
   enabled="y"
   regexp="y"
   match="^You get (.+) corpse of (.+)\.$"
   name="mobname"
   script="Add_To_Kill_Table"
   sequence="101" >
  </trigger>

  <trigger
   enabled="y"
   regexp="y"
   match="^([\[]\d+[\]])?\s?(?=You)(.*) \[(\d+)\]$"
   name="mobnamefight"
   keep_evaluating="y"
   script="mob_name"
   sequence="2" >
  </trigger>

  <trigger
    enabled="y"
    match="^(.*) tells you \'Good luck in your campaign\!\'$"
    name="camp_item"
    regexp='y'
    sequence='100'
    send_to='12'
    script="cp_check"
    omit_from_output="n" >
      <send>

        timeStart()
      </send>
  </trigger>

  <trigger
    name="mob_dead"
    custom_colour="11"
    match="Congratulations, that was one of your CAMPAIGN mobs!"
    enabled="y"
    sequence="100"
    send_to="12"
    script="delete_mob_from_table" >
      <send>
        mob_index=2
      </send>
  </trigger>

  <!-- Was (?P<mob>[^0-9]){30,30} (?P<room>.+) -->
  <trigger
    name="where_mob_trig"
    match= "^(?P<mob>[^0-9]{30,30}) (?P<room>.+)$"
    enabled="n"
    sequence="1"
    keep_evaluating="y"
    send_to="12"
    regexp="y"
    script="where_mob_trig" >
  </trigger>

  <!-- auto hunt triggers -->
  <trigger
   group="auto_hunt"
   match="^.+ is here\!|You couldn\'t find a path to .+ from here\.|No one in this area by that name\.|There is no .+ around here\.|Not while you are fighting\!|No one in this area by the name .+\.$"
   name="kill_auto_hunt"
   regexp="y"
   send_to="12"
   sequence="100"
   script="auto_hunt_stop" >
  </trigger>

  <trigger
   group="auto_hunt"
   match="^You are certain that (.+) is (.+) from here\.|You are certain that (.+) is (.+)\.|You are almost certain that (.+) is (.+) from here\.|You are confident that (.+) passed through here, heading (.+)\.|The trail of (.+) is confusing, but you're reasonably sure (.+) headed (.+)\.|There are traces of (.+) having been here. Perhaps they lead (.+)\?|You have no idea what you\'re doing\, but maybe (.+) is (.+)\?$"
   name="auto_hunt"
   regexp="y"
   send_to="12"
   sequence="100"
   script="auto_hunt_continue" >
  </trigger>

  <!-- trigers for the hunting scripts -->
  <trigger
   group="HUNTING"
   match="^You seem unable to hunt that target for some reason\.$"
   name="CPFound"
   regexp="y"
   send_to="12"
   script="CPFound"
   sequence="100" >
 </trigger>

  <trigger
   expand_variables="y"
   group="HUNTING"
   match="^You have no idea what you\'re doing\, but maybe (.*?) is (.*?)\?$"
   name="CPDoNext"
   regexp="y"
   script="incrementCounter"
   send_to="12"
   sequence="100">
  </trigger>

  <trigger
   group="HUNTING"
   match="^(.*?) is here\!$"
   regexp="y"
   script="incrementCounter"
   send_to="12"
   sequence="100">
  </trigger>

  <trigger
   group="HUNTING"
   match="^You are certain that .+ is .+ from here\.|You are almost certain that .+ is .+ from here\.|You are confident that .+ passed through here, heading .+\.|The trail of .+ is confusing, but you're reasonably sure .+ headed .+\.|There are traces of .+ having been here. Perhaps they lead .+\?|You have no idea what you\'re doing\, but maybe .+ is .+\?|You couldn\'t find a path to .+ from here\.|.+ is here\!$"
   regexp="y"
   script="incrementCounter"
   send_to="12"
   sequence="100" >
  </trigger>

  <trigger
   group="HUNTING"
   match="^No one in this area by the name \'(.*?)\'\.$"
   name="CPNotHere"
   regexp="y"
   send_to="12"
   sequence="100"
   script="not_here_script" >
  </trigger>

  <trigger
   group="HUNTING"
   match="^You couldn\'t find a path to (.*?) from here\.$"
   name="CPNoPath"
   regexp="y"
   script="incrementCounter"
   send_to="12"
   sequence="100" >
  </trigger>

  <trigger
   group="HUNTING"
   match="^You have no idea what you\'re doing\, but maybe (.*?) left (.*?)\?$"
   regexp="y"
   script="incrementCounter"
   sequence="100" >
  </trigger>

  <trigger
   group="Questing"
   match="^You are in area \: (.+)"
   name="questTestArea"
   regexp="y"
   send_to="12"
   sequence="100" >
  </trigger>

  <trigger
   group="QuestI"
   enabled="y"
   match="^(.*) can be found in the vicinity of (.*) which$"
   name="QuestInfo"
   regexp="y"
   send_to="12"
   sequence="100"
   script="questRoom" >
  </trigger>

  <trigger
   group="QuestI"
   enabled="y"
   match="^You are on a quest to slay (.*)!$"
   name="QuestMob"
   regexp="y"
   send_to="12"
   sequence="100"
   script="questMob" >
  </trigger>

  <trigger
   group="QuestI"
   enabled="y"
   match="^is in the general area of (.*).$"
   name="QuestInfoArea"
   regexp="y"
   send_to="12"
   sequence="100"
   script="questArea" >
  </trigger>

  <trigger
   group="Quest"
   enabled='y'
   match="^(.*) tells you \'of (.*?)\.\'$"
   regexp="y"
   send_to="12"
   sequence="100" >
    <send>
      Send("q i")
    </send>
  </trigger>

  <trigger
   group="Quest"
   match="^QUEST\: You have almost completed your QUEST\!$"
   regexp="y"
   send_to="10"
   sequence="100"
   script="qClear" >

  </trigger>

  <trigger
   group="Quest"
   enabled="y"
   regexp="y"
   match="(.*)(\!|\.)  \[QUEST\]$"
   send_to="12"
   sequence="100"
   script="quest_color" >
  </trigger>

  <trigger
   group="Quest"
   enabled="y"
   regexp="y"
   match="(.*)\[QUEST\]$"
   send_to="12"
   sequence="1"
   script="quest_color" >
  </trigger>

  <!-- Triggers for Global Quests   -->
  <trigger
  enabled="y"
  match="^Global Quest: Global quest # (?&lt;num&gt;\d*) for levels (\d*) to (\d*) - (.*) now started\.$"
  name="globalq_check"
  script="gq_check"
  sequence='100'
  regexp="y"
  send_to="12"
  omit_from_output="n" >
  <send>timeStart()</send>
  </trigger>

  <trigger
  enabled="y"
  match="^Global Quest: Global quest # (?&lt;num&gt;\d*) for levels (\d*) to (\d*) has now started\.$"
  name="globalq_check1"
  script="gq_check"
  sequence='1'
  regexp="y"
  send_to="12"
  omit_from_output="n" >
  <send>timeStart()</send>
  </trigger>

  <trigger
  enabled="y"
  match="^You have now joined Global Quest # (.*)\. See \'help gquest\' for available commands\.$"
  name="globalq_start"
  script="gq_start"
  sequence='1'
  regexp="y"
  omit_from_output="n" >
  </trigger>

  <trigger
  enabled="y"
  match="^Congratulations\, that was one of the GLOBAL QUEST mobs\!$"
  name="globalq_delete"
  script="delete_mob_from_table"
  sequence='100'
  regexp="y"
  omit_from_output="n" >
  </trigger>

  <trigger
  enabled="y"
  match="^You were the first to complete this quest!|Global Quest: Global quest # (.*) (\(.*\))? is now over.|You are no longer part of Global Quest # (.*) and will be unable to rejoin.$"
  name="globalq_end"
  script="gq_end"
  sequence='100'
  regexp="y"
  send_to="12"
  omit_from_output="n" >

  <send>timeEnd()</send>
  </trigger>

  <trigger
  enabled="y"
  match="^You are not in a global quest.|You were the first to complete this quest!$"
  name="globalq_noton"
  script="gq_end"
  sequence='100'
  regexp="y"
  omit_from_output="n" >
  </trigger>

  <trigger
    enabled="y"
    script=""
    match="^{scan}$"
    name="scan_on"
    omit_from_output="y"
    regexp="y"
    sequence="100"
    send_to="12" >
      <send>
        EnableTriggerGroup("scan_output",1)
      </send>
  </trigger>

  <trigger
    enabled="y"
    match="^{/scan}$"
    name="scan_off"
    omit_from_output="y"
    regexp="y"
    sequence="100"
    send_to="12" >
      <send>
        EnableTriggerGroup("scan_output",0)
      </send>
  </trigger>

  <trigger
    enabled="y"
    script="scan_break"
    match="^(Magical wards around the(.+)bounce you back\.|Alas, you cannot go that way\.)$"
    name="scan_break"
    omit_from_output="n"
    regexp="y"
    sequence="100"
    send_to="12" >
  </trigger>
  <trigger
    enabled="n"
    script="istarget"
    match="^(|Nothing to see around here with that name\.)$"
    name="scan_nothing"
    group="scan_output"
    omit_from_output="y"
    regexp="y"
    sequence="100"
    send_to="12" >
  </trigger>
  <trigger
    enabled="y"
    script="wm_study_continue"
    match="^(There is no one here by that name.)$"
    name="wm_study_continue"
    regexp="y"
    sequence="100"
    send_to="12" >
  </trigger>

  <trigger
    enabled="n"
    script="wm_study_continue"
    match="^\{end speedwalk\}$"
    name="wm_study_continue1"
    regexp="y"
    sequence="100"
    send_to="12" >
  </trigger>

  <trigger
   enabled="n"
   match="^You quickly evaluate the health of"
   regexp="y"
   repeat="y"
   name="study_output"
   group="study_output"
   send_to="12"
   sequence="100" >
    <send>
      EnableTriggerGroup("get_all_output", 1)
      DebugNote('get_all_output on')
    </send>  
  </trigger>

  <trigger
   enabled="n"
   script="istarget_study"
   match="(.*)"
   regexp="y"
   repeat="y"
   name="get_all_output"
   group="get_all_output" >
  </trigger>


  <trigger
    enabled="n"
    script="istarget"
    match="^     - (?:\([A-Za-z ]+\) ?)*(.+)$"
    name="scan_output"
    group="scan_output"
    omit_from_output="y"
    regexp="y"
    sequence="100" >
  </trigger>

  <trigger
    enabled="n"
    send_to="12"
    match="^              \[ Listing all areas in range 1 to 210 \]$"
    group="areas_check_start"
    omit_from_output="y"
    regexp="y"
    sequence="100" >
  </trigger>

  <trigger
    enabled="n"
    send_to="12"
    match="^From To   Lock  Builder          Area Name                      $"
    group="areas_check_start"
    omit_from_output="y"
    regexp="y"
    sequence="100" >
  </trigger>

  <trigger
    enabled="n"
    send_to="12"
    match="^---- ---- ----  ---------------  ------------------------------$"
    group="areas_check_start"
    omit_from_output="y"
    regexp="y"
    sequence="100" >
  </trigger>
  
  <trigger
    enabled="n"
    send_to="12"
    match="^---------------------------------------------------------------$"
    group="areas_check_start"
    omit_from_output="y"
    regexp="y"
    sequence="100" >
  </trigger>

  <trigger
    enabled="n"
    send_to="12"
    match="^\'Lock\' means you cannot enter until you are that level or higher\.$"
    group="areas_check_start"
    omit_from_output="y"
    regexp="y"
    sequence="100" >
      <send>
        EnableTriggerGroup('areas_check_start', 0)
        ResetPageSize()
      </send>
  </trigger>

  <trigger
    enabled="n"
    send_to="12"
    match="^\s+(\d+)\s+(\d+)\s+(\d+)?\s*(.{0,15})\s+(.+?)\s*$$"
    group="areas_check_start"
    omit_from_output="y"
    regexp="y"
    script='area_table_builder'
    sequence="100" >
  </trigger>
  
  <!-- PageSize triggers -->
  <trigger
  enabled="n"
  group="page_size"
  match="^You currently display ([0-9]+) lines per page\.$"
  regexp='y'
  sequence='100'
  send_to='12'
  omit_from_output="y" >
    <send>
      page_size = tonumber(%1)
      kill_pagesize = 1
    </send>
  </trigger>

  <trigger
  enabled="n"
  group="page_size"
  match="^You do not page long messages\.$"
  regexp='y'
  sequence='100'
  send_to='12'
  omit_from_output="y" >
    <send>
      page_size = 0
      kill_pagesize = 1
    </send>
  </trigger>

  <trigger
  enabled="n"
  group="page_size"
  match="^Use 'pagesize <lines>' to change, or 'pagesize 0' to disable paging\.$"
  regexp='y'
  sequence='100'
  send_to='12'
  omit_from_output="y" >
    <send>
      SendNoEcho("pagesize 0")
      EnableTriggerGroup('areas_check_start', 1)
      SendNoEcho('areas')
    </send>
  </trigger>

  <trigger
  enabled="n"
  group="page_size"
  match="^Page size set to [0-9]+ lines\.$"
  regexp='y'
  sequence='100'
  send_to='12'
  omit_from_output="y" >
    <send>
      if kill_pagesize == 1 then EnableTriggerGroup("page_size",0) end
    </send>
  </trigger>

  <trigger
  enabled="n"
  group="page_size"
  match="^Paging disabled\.$"
  regexp='y'
  sequence='100'
  send_to='12'
  omit_from_output="y" >
    <send>
      if kill_pagesize == 1 then EnableTriggerGroup("page_size",0) end
    </send>
  </trigger>

  </triggers>

  <timers>
  <timer 
    name="grbg"
    enabled="y"
    minute="59"
    second="0.00"
    offset_second="0.00"
    send_to="12">
    <send>
      DebugNote(collectgarbage("count")*1024)
      collectgarbage("collect")
      DebugNote(collectgarbage("count")*1024)
   </send>
  </timer>
</timers>

<!--  Script  -->
<script>
<![CDATA[
dofile (GetPluginInfo (GetPluginID (), 20) .. "tol.lua")
]]>
</script>
</muclient>
